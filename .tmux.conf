#====================================================
# TMUX Configuration
#
# This script provides useful TMUX configuration settings.
#====================================================

# Change the default tmux control prefix to match that of GNU Screen.
set-option -g prefix C-a

# Go ahead and un-bind the default tmux control prefix so that it may be freed up for other purposes.
unbind C-b

# Setup C-a C-a to switch the current window with the last viewed window, similar to how GNU Screen behaves.
bind-key C-a last-window

# Support the ability to send a command prefix, such as CTRL+a, to a nested tmux session. This would be like running a terminal multiplexer inside of another terminal multiplexer. Again, similar to how GNU Screen behaves.
bind-key a send-prefix

# Enable Vi mode in tmux such that a buffer can be navigated in the same manner as in Vi using Vi-like bindings.
set-window-option -g mode-keys vi

# Start window numbering at 1 so that it's easier to navigate between the first window, at index 1, and the others, beginning at 2 and proceeding from there.
set-option -g base-index 1

# Renumber all windows sequentially when any window is closed.
set -g renumber-windows on

# Set the timeout associated with waiting for characters entered after escape, <ESC>, to zero. This removes the delay between pressing <ESC>, followed by a second character as part of a command sequence, before it's recognized as a command by tmux. Therefore, tools like vim, which relies on <ESC> to indicate the desire of the user to transition from one mode (INSERT) to another (NORMAL), will receive the <ESC> key press event immediately, instead of with a delay.
set -s escape-time 0

# Enable aggressive resizing of windows. Instruct tmux to only constrain a window to the size of the smaller client that is actively looking at it.
set-window-option -g aggressive-resize on

# Enable or disable the ability to synchronize input across all window panes. This allows input to one window pane to be pushed to all currently visible window panes.
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# Set the tmux window title to print the connection string of the host that the user is currently connected to.
set-option -g set-titles on
set-option -g set-titles-string "#T"

# Enable mouse support within tmux.
set-option -g mouse on

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n M-h if-shell "$is_vim" "send-keys M-h" "select-pane -L"
bind -n M-j if-shell "$is_vim" "send-keys M-j" "select-pane -D"
bind -n M-k if-shell "$is_vim" "send-keys M-k" "select-pane -U"
bind -n M-l if-shell "$is_vim" "send-keys M-l" "select-pane -R"

# Set scroll back history so that the last 10,000 lines of output are remembered.
set-option -g history-limit 10000

# Un-bind the default key used for splitting a window vertically into multiple panes.
unbind %

# Bind GNU Screen-like keys for splitting vertically, v, and horizontally, h.
bind | split-window -h
bind - split-window -v

# Enable notifications within tmux when there is activity within a window pane.
set-window-option -g monitor-activity on
set-option -g visual-activity on

# Automatically rename a window to the name of the command that is currently running within it.
set-window-option -g automatic-rename on

# Enabled xterm key sequences for key sequences such as CTRL+arrow. This allows tmux to pass through CTRL modifiers to function keys using xterm-style key sequences.
set-window-option -g xterm-keys on

# Configure TMUX to set the $TERM environmental variable to specifically indicate that the terminal container supports 256 color.
set -g default-terminal "screen-256color"

# Remove the border style applied by tmux to indicate an active pane. By changing a pane's background color, we can more easily distinguish between active and non-active panes.
set-window-option -g pane-active-border-style ''

# Configure TMUX to use the same shell that invoked the TMUX process.
set-option -g default-shell $SHELL

# Load Powerline to customize Tmux prompt.
source "~/.linuxbrew/lib/python3.9/site-packages/powerline/bindings/tmux/powerline.conf"
